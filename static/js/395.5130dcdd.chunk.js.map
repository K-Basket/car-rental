{"version":3,"file":"static/js/395.5130dcdd.chunk.js","mappings":"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","sources":["components/Cards.styled.js","components/Cards.jsx","components/Favorite.styled.js","components/Favorite.jsx","components/Modal.styled.js","components/Modal.jsx","components/ModalCard.styled.js","components/ModalCard.jsx","pages/Favorites.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  borderAccentColor,\n  normalAccentColor,\n  shadow,\n  textMainColor,\n  textSecondColor,\n  transition,\n} from 'variables.styled';\n\nconst gapGridLeft = 29;\nconst gapGridTop = 50;\nconst numberOfCards = 4;\n\nexport const Container = styled.div`\n  /* outline: 1px solid salmon; */\n  margin-bottom: 50px;\n`;\n\nexport const CardSet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  list-style: none;\n  margin-top: -${gapGridTop}px;\n  margin-left: -${gapGridLeft}px;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc(100% / ${numberOfCards} - ${gapGridLeft}px);\n  margin-top: ${gapGridTop}px;\n  margin-left: ${gapGridLeft}px;\n  transition: scale ${transition};\n  cursor: pointer;\n\n  &:hover {\n    scale: 1.007;\n  }\n\n  /* & * {\n    outline: 1px solid blueviolet;\n  } */\n`;\n\nexport const Card = styled.article`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  box-shadow: ${shadow};\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const CardThumb = styled.div`\n  position: relative;\n  height: 268px;\n\n  & img {\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-grow: 1;\n  padding: 10px;\n`;\n\nexport const WrapCardHeading = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\n\nexport const CardHeading = styled.h2`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: calc(24 / 16);\n\n  color: ${textMainColor};\n\n  & span {\n    color: ${normalAccentColor};\n  }\n`;\n\nexport const CardTitle = styled.h2`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const CardText = styled.div`\n  color: ${textSecondColor};\n\n  & ul {\n    display: flex;\n    gap: 6px;\n    flex-wrap: wrap;\n\n    & li {\n      &:not(:last-child) {\n        height: 16px;\n        border-right: 1px solid ${borderAccentColor};\n        padding-right: 6px;\n      }\n    }\n  }\n`;\n","import {\n  CardSet,\n  Container,\n  Item,\n  Card,\n  CardThumb,\n  CardText,\n  CardContent,\n  WrapCardHeading,\n  CardHeading,\n} from './Cards.styled';\nimport { useCarsContext } from 'redux/Context';\nimport { Favorite } from './Favorite';\n\nexport const Cards = ({ listCars }) => {\n  const { getIdCar, toggleModal } = useCarsContext();\n\n  return (\n    <section>\n      <Container>\n        <CardSet>\n          {listCars &&\n            listCars.map(\n              ({\n                id,\n                img,\n                make,\n                model,\n                year,\n                rentalPrice,\n                type,\n                rentalCompany,\n                address,\n                mileage,\n                fuelConsumption,\n              }) => {\n                const location = address.split(',');\n\n                const handleLearnMore = evt => {\n                  if (\n                    evt.target.nodeName !== 'svg' &&\n                    evt.target.nodeName !== 'use'\n                  ) {\n                    getIdCar(evt.currentTarget.dataset.card);\n                    toggleModal();\n                  }\n                };\n\n                return (\n                  <Item key={id} data-card={id} onClick={handleLearnMore}>\n                    <Card>\n                      <CardThumb>\n                        <img src={img} alt={make} />\n                        <Favorite id={id} $top=\"14px\" $right=\"14px\" />\n                      </CardThumb>\n\n                      <CardContent>\n                        <WrapCardHeading>\n                          <CardHeading>\n                            {make}, <span>{model}</span> {year}\n                          </CardHeading>\n                          <CardHeading>{rentalPrice}</CardHeading>\n                        </WrapCardHeading>\n\n                        <CardText>\n                          <ul>\n                            <li>{location[1]}</li>\n                            <li>{location[2]}</li>\n                            <li>{rentalCompany}</li>\n                          </ul>\n\n                          <ul>\n                            <li>{type}</li>\n                            <li>{model}</li>\n                            <li>{mileage}</li>\n                            <li>{`Fuel: ${fuelConsumption}`}</li>\n                          </ul>\n                        </CardText>\n                      </CardContent>\n                    </Card>\n                  </Item>\n                );\n              }\n            )}\n        </CardSet>\n      </Container>\n    </section>\n  );\n};\n","import styled from 'styled-components';\nimport { normalAccentColor, transition } from 'variables.styled';\n\nexport const Svg = styled.svg`\n  position: absolute;\n\n  top: ${({ $top }) => $top || '0px'};\n  right: ${({ $right }) => $right || '0px'};\n\n  stroke: ${({ $idInc }) => ($idInc ? 'none' : 'rgba(255, 255, 255, 0.8)')};\n  fill: ${({ $idInc }) => ($idInc ? `${normalAccentColor}` : 'none')};\n\n  transition: scale ${transition};\n\n  &:hover {\n    scale: 1.1;\n  }\n`;\n","import { useCarsContext } from 'redux/Context';\nimport { Svg } from './Favorite.styled';\nimport sprite from 'images/sprite.svg';\nimport { removeLocalStorage, saveLocalStorage } from 'helpers/storage';\n\nexport const Favorite = ({ id, $top, $right }) => {\n  const { idCarsFavorite, setIdCarsFavorite } = useCarsContext();\n\n  const addFavorite = () => {\n    if (!idCarsFavorite.includes(id)) {\n      setIdCarsFavorite(prev => [...prev, id]);\n      saveLocalStorage('idCars', [...idCarsFavorite, id]);\n\n      return;\n    }\n\n    if (idCarsFavorite.includes(id)) {\n      const res = [...idCarsFavorite];\n      res.splice(idCarsFavorite.indexOf(id), 1);\n      setIdCarsFavorite(res);\n      saveLocalStorage('idCars', res);\n    }\n\n    if (idCarsFavorite.length === 1) removeLocalStorage('idCars');\n  };\n\n  return (\n    <Svg\n      $top={$top}\n      $right={$right}\n      $idInc={idCarsFavorite.includes(id)}\n      width=\"20px\"\n      height=\"20px\"\n      data-card={id}\n      onClick={addFavorite}\n    >\n      <use href={`${sprite}#icon-like-active`}></use>\n    </Svg>\n  );\n};\n","import styled from 'styled-components';\nimport { backdropModalBgColor } from 'variables.styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${backdropModalBgColor};\n  z-index: 1200;\n`;\n\nexport const ModalContent = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Backdrop, ModalContent } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport function Modal({ children, onClose }) {\n  useEffect(() => {\n    function handleKeyDown(evt) {\n      if (evt.code === 'Escape') {\n        onClose();\n      }\n    }\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  function handleBackdropClick(event) {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  }\n\n  document.body.style.overflow = 'hidden'; // stop scroll\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <ModalContent>{children}</ModalContent>\n    </Backdrop>,\n    modalRoot\n  );\n}\n","import styled from 'styled-components';\nimport {\n  borderAccentColor,\n  highlightBgColor,\n  hoverAccentColor,\n  normalAccentColor,\n  textFourthColor,\n  textMainColor,\n  textSecondColor,\n  transition,\n  whiteColor,\n} from 'variables.styled';\n\nexport const CardModal = styled.div`\n  position: relative;\n  width: 541px;\n  min-height: 752px;\n  padding: 40px;\n\n  border-radius: 15px;\n  background-color: ${whiteColor};\n\n  & > svg {\n    position: absolute;\n    top: 16px;\n    right: 16px;\n    stroke: ${textMainColor};\n    cursor: pointer;\n  }\n`;\n\nexport const CardThumb = styled.div`\n  position: relative;\n\n  & img {\n    border-radius: 15px;\n    width: 469px;\n    height: 314px;\n    object-fit: cover;\n    border-radius: 10px;\n  }\n`;\n\nexport const Description = styled.div`\n  margin-top: 15px;\n  margin-bottom: 24px;\n`;\n\nexport const CardHeading = styled.h2`\n  margin-bottom: 8px;\n\n  font-size: 18px;\n  font-weight: 500;\n  line-height: calc(24 / 16);\n\n  color: ${textMainColor};\n\n  & span {\n    color: ${normalAccentColor};\n  }\n`;\n\nexport const CardText = styled.ul`\n  color: ${textSecondColor};\n  display: flex;\n  flex-wrap: wrap;\n\n  & li {\n    &:not(:last-child) {\n      height: 16px;\n      border-right: 1px solid ${borderAccentColor};\n      padding-right: 6px;\n      margin-right: 6px;\n    }\n  }\n`;\n\nexport const CardTexCondit = styled.li`\n  padding: 7px 14px;\n  border-radius: 35px;\n  color: ${textFourthColor};\n  background-color: ${highlightBgColor};\n\n  & span {\n    color: ${normalAccentColor};\n  }\n`;\n\nexport const CardTextDesc = styled.p`\n  margin-top: 14px;\n\n  font-size: 14px;\n  line-height: calc (20/14);\n\n  color: ${textMainColor};\n`;\n\nexport const CardTitleDescSt = styled.p`\n  margin-top: 14px;\n  margin-bottom: 8px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: calc (20/14);\n\n  color: ${textMainColor};\n`;\n\nexport const Link = styled.a`\n  width: 168px;\n  padding: 12px 50px;\n\n  font-size: 14px;\n  font-weight: 600;\n  line-height: calc(20 / 14);\n\n  border-radius: 12px;\n  color: ${whiteColor};\n  background-color: ${normalAccentColor};\n  transition: background-color ${transition};\n\n  &:hover,\n  :focus {\n    background-color: ${hoverAccentColor};\n  }\n`;\n","import sprite from 'images/sprite.svg';\nimport {\n  CardHeading,\n  CardModal,\n  CardTexCondit,\n  CardText,\n  CardTextDesc,\n  CardThumb,\n  CardTitleDescSt,\n  Description,\n  Link,\n} from './ModalCard.styled';\nimport { addCommaDelimiter } from 'helpers/addCommaDelimiter';\nimport { Favorite } from './Favorite';\n\nexport const ModalCard = ({ onClose, dataOneCar }) => {\n  const {\n    img,\n    make,\n    model,\n    year,\n    address,\n    id,\n    type,\n    fuelConsumption,\n    engineSize,\n    description,\n    accessories,\n    functionalities,\n    rentalPrice,\n    mileage,\n    rentalConditions,\n  } = dataOneCar;\n  const location = address.split(',');\n  const rentalCondit = rentalConditions.split('\\n');\n  const mileageWithComma = addCommaDelimiter(`${mileage}`);\n\n  return (\n    <CardModal>\n      <svg width=\"24px\" height=\"24px\" onClick={onClose}>\n        <use href={`${sprite}#icon-x`}></use>\n      </svg>\n      <article>\n        <CardThumb>\n          <img src={img} alt={make} />\n          <Favorite id={id} $top=\"25px\" $right=\"25px\" />\n        </CardThumb>\n\n        <Description>\n          <CardHeading>\n            {make}, <span>{model}</span> {year}\n          </CardHeading>\n          <div>\n            <CardText>\n              <li>{location[1]}</li>\n              <li>{location[2]}</li>\n              <li>{`id: ${id}`}</li>\n              <li>{`Year: ${year}`}</li>\n              <li>{`Type: ${type}`}</li>\n            </CardText>\n\n            <CardText>\n              <li>{`Fuel Consumption: ${fuelConsumption}`}</li>\n              <li>{`Engine Size: ${engineSize}`}</li>\n            </CardText>\n          </div>\n\n          <CardTextDesc>{description}</CardTextDesc>\n        </Description>\n\n        <Description>\n          <CardTitleDescSt>Accessories and functionalities:</CardTitleDescSt>\n          <CardText>\n            {accessories.map(el => (\n              <li key={el}>{el}</li>\n            ))}\n          </CardText>\n\n          <CardText>\n            {functionalities.map(el => (\n              <li key={el}>{el}</li>\n            ))}\n          </CardText>\n        </Description>\n\n        <Description>\n          <CardTitleDescSt>Rental Conditions: </CardTitleDescSt>\n          <ul style={{ display: 'flex', gap: '8px', flexWrap: 'wrap' }}>\n            <CardTexCondit>\n              Minimum age: <span>{rentalCondit[0].slice(-2)}</span>\n            </CardTexCondit>\n            <CardTexCondit>{rentalCondit[1]}</CardTexCondit>\n            <CardTexCondit>{rentalCondit[2]}</CardTexCondit>\n            <CardTexCondit>\n              Mileage: <span>{mileageWithComma}</span>\n            </CardTexCondit>\n            <CardTexCondit>\n              Price: <span>{rentalPrice}</span>\n            </CardTexCondit>\n          </ul>\n        </Description>\n\n        <Link href=\"tel:+380730000000\">Rental car</Link>\n      </article>\n    </CardModal>\n  );\n};\n","import { Cards } from 'components/Cards';\nimport { Modal } from 'components/Modal';\nimport { ModalCard } from 'components/ModalCard';\nimport { useEffect, useState } from 'react';\nimport { useCarsContext } from 'redux/Context';\nimport { useGetCarsQuery } from 'redux/carSlice';\n\nconst Favorites = () => {\n  const { data } = useGetCarsQuery();\n  const { showModal, toggleModal, dataOneCar, idCarsFavorite } =\n    useCarsContext();\n  const [listFavoriteCars, setListFavoriteCars] = useState(null);\n\n  useEffect(() => {\n    if (!data) return;\n\n    let result = data.filter(\n      el => el.id === idCarsFavorite.find(id => id === el.id)\n    );\n\n    result = [...result].sort((a, b) => (a.make > b.make ? 1 : -1));\n\n    setListFavoriteCars(result);\n  }, [data, idCarsFavorite]);\n\n  return (\n    <>\n      <Cards listCars={listFavoriteCars} />\n\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <ModalCard onClose={toggleModal} dataOneCar={dataOneCar} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default Favorites;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","CardSet","_templateObject2","Item","_templateObject3","transition","Card","_templateObject4","shadow","CardThumb","_templateObject5","CardContent","_templateObject6","WrapCardHeading","_templateObject7","CardHeading","_templateObject8","textMainColor","normalAccentColor","CardText","_templateObject9","_templateObject10","textSecondColor","borderAccentColor","Cards","_ref","listCars","_useCarsContext","useCarsContext","getIdCar","toggleModal","_jsx","children","map","_ref2","id","img","make","model","year","rentalPrice","type","rentalCompany","address","mileage","fuelConsumption","location","split","onClick","evt","target","nodeName","currentTarget","dataset","card","_jsxs","src","alt","Favorite","$top","$right","concat","Svg","_ref3","$idInc","_ref4","idCarsFavorite","setIdCarsFavorite","includes","width","height","prev","_toConsumableArray","saveLocalStorage","res","splice","indexOf","length","removeLocalStorage","href","sprite","Backdrop","backdropModalBgColor","ModalContent","modalRoot","document","querySelector","Modal","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","body","style","overflow","createPortal","event","CardModal","whiteColor","Description","CardTexCondit","textFourthColor","highlightBgColor","CardTextDesc","CardTitleDescSt","Link","hoverAccentColor","ModalCard","dataOneCar","engineSize","description","accessories","functionalities","rentalConditions","rentalCondit","mileageWithComma","addCommaDelimiter","el","display","gap","flexWrap","slice","data","useGetCarsQuery","showModal","_useState","useState","_useState2","_slicedToArray","listFavoriteCars","setListFavoriteCars","result","filter","find","sort","a","b","_Fragment"],"sourceRoot":""}