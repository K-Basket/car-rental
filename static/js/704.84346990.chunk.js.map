{"version":3,"file":"static/js/704.84346990.chunk.js","mappings":"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","sources":["components/Cards.styled.js","images/sprite.svg","components/Cards.jsx","components/Filter.styled.js","components/Btn.styled.js","components/Btn.jsx","helpers/removesCommas.js","components/Select.styled.js","components/Select.jsx","components/Filter.jsx","helpers/addCommaDelimiter.js","pages/Catalog.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst gapGridLeft = 29;\nconst gapGridTop = 50;\nconst numberOfCards = 4;\nconst shadow =\n  '0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12)';\n\nexport const Container = styled.div`\n  /* outline: 1px solid salmon; */\n\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-top: 50px;\n  width: 1184px;\n`;\n\nexport const CardSet = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  list-style: none;\n  margin-top: -${gapGridTop}px;\n  margin-left: -${gapGridLeft}px;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc(100% / ${numberOfCards} - ${gapGridLeft}px);\n  margin-top: ${gapGridTop}px;\n  margin-left: ${gapGridLeft}px;\n  transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  cursor: pointer;\n\n  &:hover {\n    scale: 1.007;\n  }\n\n  /* & * {\n    outline: 1px solid blueviolet;\n  } */\n`;\n\nexport const Card = styled.article`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  box-shadow: ${shadow};\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const CardThumb = styled.div`\n  position: relative;\n  height: 268px;\n\n  & img {\n    height: 100%;\n    object-fit: cover;\n  }\n\n  & svg {\n    position: absolute;\n    top: 14px;\n    right: 14px;\n    stroke: #ffffffcc;\n    /* fill: #3470ff; */\n    fill: none;\n    transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n    &:hover {\n      scale: 1.1;\n    }\n  }\n`;\n\nexport const CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-grow: 1;\n  padding: 10px;\n`;\n\nexport const WrapCardHeading = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\n\nexport const CardHeading = styled.h2`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: calc(24 / 16);\n\n  color: #121417;\n\n  & span {\n    color: #3470ff;\n  }\n`;\n\nexport const CardTitle = styled.h2`\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const CardText = styled.div`\n  color: rgba(18, 20, 23, 0.5);\n\n  & ul {\n    display: flex;\n    gap: 6px;\n    flex-wrap: wrap;\n\n    & li {\n      &:not(:last-child) {\n        height: 16px;\n        border-right: 1px solid rgba(18, 20, 23, 0.1);\n        padding-right: 6px;\n      }\n    }\n  }\n`;\n","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 3.2,\n    d: \"M8 12l8 8 8-8\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-like-active\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 1.7778,\n    d: \"M27.787 6.148c-1.327-1.328-3.161-2.149-5.187-2.149s-3.859 0.821-5.187 2.149l-1.413 1.413-1.413-1.413c-1.325-1.315-3.151-2.128-5.166-2.128-4.051 0-7.335 3.284-7.335 7.335 0 2.015 0.813 3.841 2.128 5.167l11.786 11.784 11.787-11.787c1.328-1.327 2.149-3.161 2.149-5.187s-0.821-3.859-2.149-5.187l-0-0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-like-normal\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.6667,\n    d: \"M27.787 6.148c-1.327-1.328-3.161-2.149-5.187-2.149s-3.859 0.821-5.187 2.149l-1.413 1.413-1.413-1.413c-1.325-1.315-3.151-2.128-5.166-2.128-4.051 0-7.335 3.284-7.335 7.335 0 2.015 0.813 3.841 2.128 5.167l11.786 11.784 11.787-11.787c1.328-1.327 2.149-3.161 2.149-5.187s-0.821-3.859-2.149-5.187l-0-0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-x\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinejoin: \"round\",\n    strokeLinecap: \"round\",\n    strokeMiterlimit: 4,\n    strokeWidth: 2.4,\n    d: \"M24 8l-16 16M8 8l16 16\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.74eb64bea597244ffe87f21044464716.svg\";\nexport { ForwardRef as ReactComponent };","import { useGetCarsQuery } from 'redux/carSlice';\nimport {\n  CardSet,\n  Container,\n  Item,\n  Card,\n  CardThumb,\n  CardText,\n  CardContent,\n  WrapCardHeading,\n  CardHeading,\n} from './Cards.styled';\nimport sprite from 'images/sprite.svg';\n\nexport const Cards = ({ getIdCar }) => {\n  const { data } = useGetCarsQuery();\n\n  return (\n    <Container>\n      <CardSet>\n        {data &&\n          data.map(\n            ({\n              id,\n              img,\n              make,\n              model,\n              year,\n              rentalPrice,\n              type,\n              rentalCompany,\n              address,\n              mileage,\n              fuelConsumption,\n            }) => {\n              const location = address.split(',');\n\n              return (\n                <Item\n                  key={id}\n                  data-card={id}\n                  onClick={evt => {\n                    getIdCar(evt.currentTarget.dataset.card);\n                  }}\n                >\n                  <Card>\n                    <CardThumb>\n                      <img src={img} alt={make} />\n                      <svg\n                        width=\"20px\"\n                        height=\"20px\"\n                        data-card={id}\n                        style={{\n                          fill: false && '#3470ff',\n                          stroke: false && 'none',\n                        }}\n                        onClick={() => {\n                          console.log('click icon');\n                        }}\n                      >\n                        <use href={`${sprite}#icon-like-active`}></use>\n                      </svg>\n                    </CardThumb>\n\n                    <CardContent>\n                      <WrapCardHeading>\n                        <CardHeading>\n                          {make}, <span>{model}</span> {year}\n                        </CardHeading>\n                        <CardHeading>{rentalPrice}</CardHeading>\n                      </WrapCardHeading>\n\n                      <CardText>\n                        <ul>\n                          <li>{location[1]}</li>\n                          <li>{location[2]}</li>\n                          <li>{rentalCompany}</li>\n                        </ul>\n\n                        <ul>\n                          <li>{type}</li>\n                          <li>{model}</li>\n                          <li>{mileage}</li>\n                          <li>{`Fuel: ${fuelConsumption}`}</li>\n                        </ul>\n                      </CardText>\n                    </CardContent>\n                  </Card>\n                </Item>\n              );\n            }\n          )}\n      </CardSet>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: flex-end;\n\n  & div {\n    position: relative;\n\n    & p {\n      position: absolute;\n      top: 14px;\n      left: 24px;\n\n      font-size: 18px;\n      font-weight: 500;\n      line-height: calc(20 / 18);\n\n      color: #121417;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  font-size: 14px;\n  font-weight: 500;\n  line-height: calc(18 / 14);\n  color: #8a8a89;\n`;\n\nexport const InputLeft = styled.input`\n  display: block;\n  width: 160px;\n  padding: 14px 0 14px 70px;\n  margin-top: 8px;\n  border: none;\n  border-radius: 14px 0px 0px 14px;\n  border-right: 1px solid rgba(138, 138, 137, 0.2);\n\n  color: #121417;\n  background-color: #f7f7fb;\n  background-color: yellowgreen;\n\n  font-size: 18px;\n  font-weight: 500;\n  line-height: calc(20 / 18);\n`;\n\nexport const InputRight = styled.input`\n  display: block;\n  width: 160px;\n  padding: 14px 0 14px 48px;\n  margin-top: 26px;\n  margin-right: 18px;\n  border: none;\n  border-radius: 0px 14px 14px 0px;\n\n  color: #121417;\n  background-color: #f7f7fb;\n  background-color: yellowgreen;\n\n  font-size: 18px;\n  font-weight: 500;\n  line-height: calc(20 / 18);\n`;\n\nexport const ErrorText = styled.p`\n  display: inline;\n  color: blueviolet;\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  min-width: ${({ $width }) => $width || '100px'};\n  padding: ${({ $paddingTopBott }) => $paddingTopBott || '12px 0'};\n\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: calc(20 / 14);\n\n  border: none;\n  border-radius: 12px;\n  color: #ffffff;\n  background-color: #3470ff;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n  &:hover,\n  :focus {\n    background-color: #0b44cd;\n  }\n`;\n","import { Button } from './Btn.styled';\n\nexport const Btn = ({ children, $width, $paddingTopBott, onClick, type }) => {\n  return (\n    <Button\n      type={type}\n      $width={$width}\n      $paddingTopBott={$paddingTopBott}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  );\n};\n","export const removesCommas = value => value.split(',').join('');\n","import styled from 'styled-components';\n\nexport const Title = styled.h3`\n  margin-bottom: 8px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: calc(18 / 14);\n  color: #8a8a89;\n  color: ${props => props.$colorValue || '#8a8a89'};\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: ${props => props.$width || '224px'};\n  height: 48px;\n  padding: 0 18px 0 18px;\n  background-color: #f7f7fb;\n  background-color: burlywood;\n  border-radius: 14px;\n  cursor: pointer;\n  z-index: 1;\n\n  & p {\n    font-size: 18px;\n    font-weight: 500;\n    line-height: calc(20 / 18);\n    color: #121417;\n  }\n\n  & svg {\n    stroke: #121417;\n    fill: none;\n  }\n`;\n\nexport const ListOptions = styled.ul`\n  position: absolute;\n  top: 50px;\n  left: 0;\n\n  color: green;\n  padding: 14px 18px;\n  margin-top: 4px;\n\n  width: ${props => props.$width || '224px'};\n  max-height: ${props => props.$maxHeight || '272px'};\n  border-radius: 14px;\n  border: 1px solid rgba(18, 20, 23, 0.05);\n  border: 1px solid burlywood;\n  background-color: #ffffff;\n  box-shadow: 0px 4px 36px 0px rgba(0, 0, 0, 0.02);\n\n  overflow-y: auto;\n  scroll-behavior: smooth;\n\n  & li {\n    font-size: 16px;\n    font-weight: 500;\n    line-height: calc(20 / 16);\n    color: rgba(18, 20, 23, 0.2);\n\n    &:not(:last-child) {\n      padding-bottom: 8px;\n\n      &:hover {\n        color: #121417;\n      }\n    }\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Container, ListOptions, Title } from './Select.styled';\nimport sprite from 'images/sprite.svg';\n\nexport const Select = ({\n  title,\n  defaultText,\n  $width,\n  $colorValue,\n  $maxHeight,\n  list,\n  onSubmit,\n  selected,\n}) => {\n  const [showSelect, setShowSelect] = useState(false);\n\n  useEffect(() => {\n    const handleKeyDown = evt => {\n      if (evt.code === 'Escape') setShowSelect(false);\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [showSelect]);\n\n  const handleShowList = () => {\n    setShowSelect(show => !show);\n  };\n\n  const handleGetSelected = evt => {\n    const { name } = evt.target.dataset;\n\n    const titleKey = title.split(' ').join('').split('/1').join('');\n    onSubmit({ ...{ [titleKey]: name } });\n  };\n\n  function getListSelect(data) {\n    let result = [];\n\n    data?.forEach(item => {\n      if (!result.includes(item)) result.push(item);\n    });\n\n    return result;\n  }\n\n  return (\n    <div>\n      <Title $colorValue={$colorValue}>{title}</Title>\n\n      <Container $width={$width} onClick={handleShowList}>\n        {title === 'Car brand' ? (\n          <p>{!selected ? `${defaultText}` : `${selected}`}</p>\n        ) : (\n          <p>{!selected ? `${defaultText}` : `To ${selected}$`}</p>\n        )}\n\n        <svg\n          width=\"20px\"\n          height=\"20px\"\n          style={{ transform: showSelect && `rotate(180deg)` }}\n        >\n          <use href={`${sprite}#icon-arrow`}></use>\n        </svg>\n\n        {showSelect && (\n          <ListOptions $width={$width} $maxHeight={$maxHeight}>\n            {getListSelect(list).map(item => {\n              return (\n                <li\n                  key={item}\n                  data-name={item}\n                  onClick={handleGetSelected}\n                  style={{ color: selected === item && '#121417' }}\n                >\n                  {item}\n                </li>\n              );\n            })}\n          </ListOptions>\n        )}\n      </Container>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Form, InputLeft, InputRight, Label } from './Filter.styled';\nimport { Btn } from './Btn';\nimport { addCommaDelimiter } from 'helpers/addCommaDelimiter';\nimport { removesCommas } from 'helpers/removesCommas';\nimport { useGetCarsQuery } from 'redux/carSlice';\nimport { Select } from './Select';\n\nexport const Filter = () => {\n  const INITIAL_STATE = {\n    priceFrom: '',\n    priceTo: '',\n    Carbrand: '',\n    Pricehour: '',\n  };\n\n  const { data } = useGetCarsQuery();\n  // console.log('data :>> ', data, error, isLoading);\n\n  const [valueForm, setValueForm] = useState(INITIAL_STATE);\n  const { priceFrom, priceTo, Carbrand, Pricehour } = valueForm;\n\n  const [dataFilter, setDataFilter] = useState(null);\n  // console.log('dataFilter :>> ', dataFilter);\n  // console.log('valueForm :>> ', valueForm);\n\n  const listBrand = data\n    ?.map(({ make }) => {\n      return make;\n    })\n    .sort((a, b) => (a > b ? 1 : -1));\n\n  const listPrice = data\n    ?.map(({ rentalPrice }) => {\n      return rentalPrice.slice(1);\n    })\n    .sort((a, b) => a - b);\n\n  const handleGetSelected = values => {\n    setDataFilter({ ...dataFilter, ...values });\n    setValueForm({ ...valueForm, ...values });\n  };\n\n  const hanleGhange = evt => {\n    const { name, value } = evt.target;\n    // записал в форму для отображения в интерфейсе с запятой\n    setValueForm({ ...valueForm, [name]: addCommaDelimiter(value) });\n    // записал данные для фильтрации\n    setDataFilter({\n      ...dataFilter,\n      ...{ [name]: value },\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (priceFrom >= priceTo && priceTo !== '') {\n      console.warn('The \"From\" value must NOT be greater than the \"To\" value');\n      return;\n    }\n\n    setDataFilter({\n      ...dataFilter,\n      ...{\n        priceFrom: removesCommas(priceFrom),\n        priceTo: removesCommas(priceTo),\n      },\n    });\n\n    setValueForm(INITIAL_STATE);\n\n    // Filtering Function\n    console.warn('Here is the filtering Function', dataFilter);\n\n    setDataFilter(INITIAL_STATE);\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'end',\n        gap: '18px',\n      }}\n    >\n      <Select\n        title=\"Car brand\"\n        defaultText=\"Enter the text\"\n        $width=\"224px\"\n        $maxHeight=\"272px\"\n        list={listBrand}\n        onSubmit={handleGetSelected}\n        selected={Carbrand}\n      />\n\n      <Select\n        title=\"Price/ 1 hour\"\n        defaultText=\"To $\"\n        $width=\"125px\"\n        $maxHeight=\"188px\"\n        list={listPrice}\n        onSubmit={handleGetSelected}\n        selected={Pricehour}\n      />\n\n      <Form onSubmit={handleSubmit} autoComplete=\"on\">\n        <Label htmlFor=\"priceFrom\">\n          Сar mileage / km\n          <div>\n            <p>From</p>\n            <InputLeft\n              type=\"text\"\n              name=\"priceFrom\"\n              value={priceFrom}\n              onChange={hanleGhange}\n            />\n          </div>\n        </Label>\n\n        <Label htmlFor=\"priceFrom\">\n          <div>\n            <p>To</p>\n            <InputRight\n              type=\"text\"\n              name=\"priceTo\"\n              value={priceTo}\n              onChange={hanleGhange}\n            />\n          </div>\n        </Label>\n\n        <Btn $width=\"136px\" $paddingTopBott=\"14px 0\" type=\"submit\">\n          Search\n        </Btn>\n      </Form>\n    </div>\n  );\n};\n","export const addCommaDelimiter = num =>\n  num.replace(/[^0-9.]/g, '').replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n","import { Cards } from 'components/Cards';\nimport { Filter } from 'components/Filter';\nimport { useState } from 'react';\nimport { useGetCarsQuery } from 'redux/carSlice';\n\nconst Catalog = () => {\n  const { data } = useGetCarsQuery();\n  const [dataCar, setDataCar] = useState({});\n  console.log('dataCar for Modal :>> ', dataCar);\n\n  const getIdCar = idCard => {\n    const dataCar = data.find(el => el.id === idCard);\n    setDataCar(dataCar);\n  };\n\n  return (\n    <>\n      <h1>Catalog Pages</h1>\n\n      <Filter />\n      <Cards getIdCar={getIdCar} />\n    </>\n  );\n};\n\nexport default Catalog;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","CardSet","_templateObject2","Item","_templateObject3","Card","_templateObject4","CardThumb","_templateObject5","CardContent","_templateObject6","WrapCardHeading","_templateObject7","CardHeading","_templateObject8","CardText","_templateObject9","_templateObject10","Cards","_ref","getIdCar","data","useGetCarsQuery","_jsx","children","map","_ref2","id","img","make","model","year","rentalPrice","type","rentalCompany","address","mileage","fuelConsumption","location","split","onClick","evt","currentTarget","dataset","card","_jsxs","src","alt","width","height","style","fill","stroke","console","log","href","concat","sprite","Form","Label","InputLeft","InputRight","Button","$width","$paddingTopBott","Btn","removesCommas","value","join","Title","props","$colorValue","ListOptions","$maxHeight","Select","title","defaultText","list","onSubmit","selected","_useState","useState","_useState2","_slicedToArray","showSelect","setShowSelect","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","handleGetSelected","name","target","titleKey","_objectSpread","_defineProperty","show","transform","result","forEach","item","includes","push","getListSelect","color","Filter","INITIAL_STATE","priceFrom","priceTo","Carbrand","Pricehour","valueForm","setValueForm","_useState3","_useState4","dataFilter","setDataFilter","listBrand","sort","a","b","listPrice","slice","values","hanleGhange","_evt$target","replace","display","justifyContent","alignItems","gap","preventDefault","warn","autoComplete","htmlFor","onChange","dataCar","setDataCar","_Fragment","idCard","find","el"],"sourceRoot":""}